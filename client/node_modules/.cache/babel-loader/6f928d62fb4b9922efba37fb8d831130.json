{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: [...state.user.followings, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: state.user.followings.filter(following => following !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/Users/akashsingh/Desktop/SocialApp_Akash/client/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","followings","filter","following"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO;AACHC,QAAAA,IAAI,EAAE,IADH;AAEHC,QAAAA,UAAU,EAAE,IAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADV;AAEHF,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAE,IADH;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,QAAL;AACA,aAAO,EACH,GAAGL,KADA;AAEHG,QAAAA,IAAI,EAAE,EACF,GAAGH,KAAK,CAACG,IADP;AAEFI,UAAAA,UAAU,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAN,CAAWI,UAAf,EAA2BN,MAAM,CAACK,OAAlC;AAFV;AAFH,OAAP;;AAOA,SAAK,UAAL;AACA,aAAO,EACH,GAAGN,KADA;AAEHG,QAAAA,IAAI,EAAE,EACF,GAAGH,KAAK,CAACG,IADP;AAEFI,UAAAA,UAAU,EAAEP,KAAK,CAACG,IAAN,CAAWI,UAAX,CAAsBC,MAAtB,CACPC,SAAD,IAAeA,SAAS,KAAKR,MAAM,CAACK,OAD5B;AAFV;AAFH,OAAP;;AASA;AACI,aAAON,KAAP;AAtCR;AAwCH,CAzCD;;KAAMD,W;AA2CN,eAAeA,WAAf","sourcesContent":["const AuthReducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN_START\":\n            return {\n                user: null,\n                isFetching: true,\n                error: false,\n            };\n        case \"LOGIN_SUCCESS\":\n            return {\n                user: action.payload,\n                isFetching: false,\n                error: false,\n            };\n        case \"LOGIN_FAILURE\":\n            return {\n                user: null,\n                isFetching: false,\n                error: true,\n            };\n        case \"FOLLOW\":\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                followings: [...state.user.followings, action.payload],\n            },\n        };\n        case \"UNFOLLOW\":\n        return {\n            ...state,\n            user: {\n                ...state.user,\n                followings: state.user.followings.filter(\n                    (following) => following !== action.payload\n                ),\n            },\n        };\n        default:\n            return state;\n    }\n};\n\nexport default AuthReducer;\n"]},"metadata":{},"sourceType":"module"}