{"ast":null,"code":"var _jsxFileName = \"/Users/akashsingh/Desktop/SocialApp_Akash/client/src/components/Conversations/Conversation.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./conversation.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversation(_ref) {\n  _s();\n\n  let {\n    conversation,\n    currentUser\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  useEffect(() => {\n    const friendId = conversation.members.find(m => m !== currentUser._id);\n\n    const getUser = async () => {\n      try {\n        const res = await axios(\"/users?userId=\" + friendId);\n        setUser(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUser();\n  }, [currentUser, conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"conversationImg\",\n      src: (user === null || user === void 0 ? void 0 : user.profilePicture) ? PF + user.profilePicture : PF + \"/person/noAvatar.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"conversationName\",\n      children: user === null || user === void 0 ? void 0 : user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Conversation, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["/Users/akashsingh/Desktop/SocialApp_Akash/client/src/components/Conversations/Conversation.jsx"],"names":["useEffect","useState","axios","Conversation","conversation","currentUser","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","friendId","members","find","m","_id","getUser","res","data","err","console","log","profilePicture","username"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,YAAT,OAAmD;AAAA;;AAAA,MAA7B;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAA6B;AAE9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMO,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAGR,YAAY,CAACS,OAAb,CAAqBC,IAArB,CAA2BC,CAAD,IAAOA,CAAC,KAAKV,WAAW,CAACW,GAAnD,CAAjB;;AAEA,UAAMC,OAAO,GAAG,YAAY;AACxB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,mBAAmBU,QAApB,CAAvB;AACAL,QAAAA,OAAO,CAACW,GAAG,CAACC,IAAL,CAAP;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAPD;;AAQAH,IAAAA,OAAO;AACV,GAZQ,EAYN,CAACZ,WAAD,EAAcD,YAAd,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,GAAG,EAAE,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEiB,cAAN,IAAuBf,EAAE,GAAGF,IAAI,CAACiB,cAAjC,GAAkDf,EAAE,GAAG,sBAFhE;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,gBAAoCF,IAApC,aAAoCA,IAApC,uBAAoCA,IAAI,CAAEkB;AAA1C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5BuBrB,Y;;KAAAA,Y","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./conversation.css\";\nimport axios from \"axios\";\n\nexport default function Conversation({conversation, currentUser}) {\n    \n    const [user, setUser] = useState(null);\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n    \n    useEffect(() => {\n        const friendId = conversation.members.find((m) => m !== currentUser._id);\n    \n        const getUser = async () => {\n            try {\n                const res = await axios(\"/users?userId=\" + friendId);\n                setUser(res.data);\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getUser();\n    }, [currentUser, conversation]);\n    \n    return (\n        <div className=\"conversation\">\n            <img\n                className=\"conversationImg\"\n                src={user?.profilePicture ? PF + user.profilePicture : PF + \"/person/noAvatar.png\"}\n                alt=\"\" />\n            <span className=\"conversationName\">{user?.username}</span>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}